import java.util.ArrayList;
import java_cup.runtime.Symbol;

/* Preliminaries to use the scanner.  */
scan with {: return lexer.next_token(); :};

parser code {: 
  ExprLex lexer;

  public ExprParser(ExprLex lex) {
      super(lex);
      lexer = lex;
  }
:}; 

/* Terminals (tokens returned by lexer). */
terminal TIMES, DIV;
terminal PLUS, MINUS;
terminal LPAREN, RPAREN;
terminal EOL;

terminal Integer INT;
  
non terminal ArrayList<Node> line_list;
non terminal Node line;
non terminal Node expr;

precedence left PLUS, MINUS;
precedence left TIMES, DIV;

start with line_list;

line_list ::= line_list:list line:l
	{: if(list == null) 
		list = new ArrayList<Node>();
	   list.add(l);
	   RESULT = list;
	:}
	|
	; 

line ::= expr:result EOL
	{: RESULT = result; :}
	|
	expr:result
	{: RESULT = result; :}
	;

expr ::=expr:l PLUS expr:r
	{: RESULT = new AddNode(l, r); :}
	|
	expr:l MINUS expr:r
	{: RESULT = new MinusNode(l, r); :}
	|
	expr:l DIV expr:r
	{: RESULT = new DivNode(l, r); :}
	|
	expr:l TIMES expr:r
	{: RESULT = new TimesNode(l, r); :}
	|
	LPAREN expr:e RPAREN
	{: RESULT = e; :}
	|
	INT:i
	{: RESULT = new IntNode(i); :}
	;
